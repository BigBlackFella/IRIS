<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" 
      xmlns:json="http://www.mulesoft.org/schema/mule/json" 
      xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" 
      xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" 
      xmlns="http://www.mulesoft.org/schema/mule/core" 
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm" 
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
      xmlns:spring="http://www.springframework.org/schema/beans" 
      xmlns:core="http://www.mulesoft.org/schema/mule/core" 
      version="CE-3.3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd 
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
        http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd 
        http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd 
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
        http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd ">
    <custom-transformer class="org.mule.module.xml.transformer.XmlPrettyPrinter" name="Java" doc:name="Java">
        <spring:property name="trimText" value="true"/>
        <spring:property name="padText" value="false"/>
        <spring:property name="newlines" value="false"/>
        <spring:property name="suppressDeclaration" value="true"/>
        <spring:property name="indentSize" value="0"/>
        <spring:property name="indentEnabled" value="false"/>
    </custom-transformer>
<!--
    <description> This configuration tests a simple hello world VM call.</description>
  -->
    <flow name="vm://maptoxml" doc:name="vm://maptoxml">
        <vm:inbound-endpoint exchange-pattern="request-response" path="maptoxml" doc:name="VM Endpoint"/>
        <mulexml:object-to-xml-transformer doc:name="Object to XML"/>
        <transformer ref="Java" doc:name="UnPrettyPrint"/>
    </flow>
    <flow name="vm://datamapper" doc:name="vm://datamapper">
        <vm:inbound-endpoint exchange-pattern="request-response" path="datamapper" doc:name="VM"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    <flow name="vm://view-command" doc:name="vm://view-command">
        <vm:inbound-endpoint exchange-pattern="request-response" path="view-command" doc:name="VM"/>
        <logger message="VM Request: #[mule:message.payload(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <set-payload value="#[mule:message.payload(java.lang.String)]" doc:name="Set Payload"/>
        <file:outbound-endpoint path="C:\logs" outputPattern="#[function:datestamp]-view-command.xml" responseTimeout="10000" doc:name="File"/>
    </flow>
    <flow name="vm://action-command" doc:name="vm://action-command">
        <vm:inbound-endpoint exchange-pattern="request-response" path="action-command" doc:name="VM"/>
        <logger message="VM Request: #[mule:message.payload(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <set-payload value="#[mule:message.payload(java.lang.String)]" doc:name="Set Payload"/>
        <file:outbound-endpoint path="c:\logs" outputPattern="#[function:datestamp]-action-command.xml" responseTimeout="10000" doc:name="File"/>
    </flow>
</mule>
