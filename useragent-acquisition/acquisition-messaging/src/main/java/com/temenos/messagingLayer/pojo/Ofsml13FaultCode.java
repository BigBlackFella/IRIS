//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b26-ea3 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.06.20 at 02:21:10 PM IST 
//

package com.temenos.messagingLayer.pojo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * <p>
 * Java class for ofsml13FaultCode.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * <p>
 * 
 * <pre>
 * &lt;simpleType name="ofsml13FaultCode">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="DUPLICATE-MESSAGE"/>
 *     &lt;enumeration value="EVENT-SOURCE-INVALID"/>
 *     &lt;enumeration value="EVENT-TYPE-INVALID"/>
 *     &lt;enumeration value="T24-UNAVAILABLE"/>
 *     &lt;enumeration value="INVALID-RECORD"/>
 *     &lt;enumeration value="MAX-EXTERNAL-RETRY"/>
 *     &lt;enumeration value="RECORD-LOCKED"/>
 *     &lt;enumeration value="REQUEST-EXPIRED"/>
 *     &lt;enumeration value="REQUEST-INVALID"/>
 *     &lt;enumeration value="REQUEST-TIMEOUT"/>
 *     &lt;enumeration value="SECURITY-VIOLATION"/>
 *     &lt;enumeration value="UNDEFINED-FATAL-ERROR"/>
 *     &lt;enumeration value="UNRECOGNISED-REQUEST"/>
 *     &lt;enumeration value="VOID-RESPONSE"/>
 *     &lt;enumeration value="XML-PARSING-ERROR"/>
 *     &lt;enumeration value="XML-VALIDATION-ERROR"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum Ofsml13FaultCode {

	@XmlEnumValue("DUPLICATE-MESSAGE")
	DUPLICATE_MESSAGE("DUPLICATE-MESSAGE"), @XmlEnumValue("EVENT-SOURCE-INVALID")
	EVENT_SOURCE_INVALID("EVENT-SOURCE-INVALID"), @XmlEnumValue("EVENT-TYPE-INVALID")
	EVENT_TYPE_INVALID("EVENT-TYPE-INVALID"), @XmlEnumValue("INVALID-RECORD")
	INVALID_RECORD("INVALID-RECORD"), @XmlEnumValue("MAX-EXTERNAL-RETRY")
	MAX_EXTERNAL_RETRY("MAX-EXTERNAL-RETRY"), @XmlEnumValue("RECORD-LOCKED")
	RECORD_LOCKED("RECORD-LOCKED"), @XmlEnumValue("REQUEST-EXPIRED")
	REQUEST_EXPIRED("REQUEST-EXPIRED"), @XmlEnumValue("REQUEST-INVALID")
	REQUEST_INVALID("REQUEST-INVALID"), @XmlEnumValue("REQUEST-TIMEOUT")
	REQUEST_TIMEOUT("REQUEST-TIMEOUT"), @XmlEnumValue("SECURITY-VIOLATION")
	SECURITY_VIOLATION("SECURITY-VIOLATION"), @XmlEnumValue("T24-UNAVAILABLE")
	T_24_UNAVAILABLE("T24-UNAVAILABLE"), @XmlEnumValue("UNDEFINED-FATAL-ERROR")
	UNDEFINED_FATAL_ERROR("UNDEFINED-FATAL-ERROR"), @XmlEnumValue("UNRECOGNISED-REQUEST")
	UNRECOGNISED_REQUEST("UNRECOGNISED-REQUEST"), @XmlEnumValue("VOID-RESPONSE")
	VOID_RESPONSE("VOID-RESPONSE"), @XmlEnumValue("XML-PARSING-ERROR")
	XML_PARSING_ERROR("XML-PARSING-ERROR"), @XmlEnumValue("XML-VALIDATION-ERROR")
	XML_VALIDATION_ERROR("XML-VALIDATION-ERROR");
	private final String value;

	Ofsml13FaultCode(String v) {
		value = v;
	}

	public String value() {
		return value;
	}

	public static Ofsml13FaultCode fromValue(String v) {
		for (Ofsml13FaultCode c : Ofsml13FaultCode.values()) {
			if (c.value.equals(v)) {
				return c;
			}
		}
		throw new IllegalArgumentException(v.toString());
	}

}
