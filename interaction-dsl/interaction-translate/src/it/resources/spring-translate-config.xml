<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  interaction-translate
  %%
  Copyright (C) 2012 - 2016 Temenos Holdings N.V.
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #L%
  -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<bean id="entityTransformer" class="com.temenos.interaction.commands.odata.OEntityTransformer" />
	
	<!-- Metadata -->	
	<bean id="metadataManager" class="com.temenos.interaction.odataext.resource.ResourceMetadataManager">
        <constructor-arg ref="stateMachine" />
	</bean>
	<bean id="metadata" factory-bean="metadataManager" factory-method="getMetadata"/>
	
	<!-- Odata4j Metadata -->
	<bean id="metadataOData4j" class="com.temenos.interaction.odataext.entity.MetadataOData4j">
        <constructor-arg ref="metadata" />
        <constructor-arg ref="stateMachine" />
    </bean>
	
	<bean id="serviceRootFactory" class="com.temenos.interaction.winkext.LazyServiceRootFactory">
		<property name="commandController" ref="commands" />
		<property name="metadata" ref="metadata" />
		<property name="transformer" ref="entityTransformer" />
		<property name="resourceStateProvider" ref="resourceStateProvider" />
	</bean>
	
	<bean id="resourceStateCache" class="com.temenos.interaction.core.cache.CacheConcurrentImpl" />
	<bean id="resourceStateMapper" class="com.temenos.interaction.translate.mapper.ResourceStateMapper" />
	<bean id="resourceStateLoader" class="com.temenos.interaction.rimdsl.generator.launcher.RIMResourceStateLoader" />
	
	<bean id="resourceStateProvider" class="com.temenos.interaction.translate.loader.RIMResourceStateProvider">
		<constructor-arg value="classpath*:/**/*.rim" />
		<constructor-arg ref="resourceStateCache" />
		<constructor-arg ref="resourceStateMapper" />
		<constructor-arg ref="resourceStateLoader" />
	</bean>
	
	<bean id="serviceDocument" factory-bean="resourceStateProvider" factory-method="getResourceState">
		<constructor-arg value="test-ServiceDocument" />
	</bean>
	
	<!-- Create a complete state machine for the OData ServiceDocument and Metadata -->
	<bean id="stateMachine" class="com.temenos.interaction.core.hypermedia.ResourceStateMachine">
        <constructor-arg name="initialState" ref="serviceDocument" />
    	<constructor-arg name="exceptionState"><null /></constructor-arg>
		<constructor-arg name="transformer" ref="entityTransformer" />
    	<constructor-arg name="resourceLocatorProvider"><null /></constructor-arg>
		<constructor-arg name="resourceStateProvider" ref="resourceStateProvider" />
	</bean>
	
	<!-- Define the $metadata resource for OData (note, this is out of band meaning there are no links to the metadata from our service -->
    <bean id="Metadata" class="com.temenos.interaction.core.rim.HTTPHypermediaRIM">
        <constructor-arg ref="commands" />
        <constructor-arg>
            <bean class="com.temenos.interaction.core.hypermedia.ResourceStateMachine">
                <constructor-arg>
                    <bean class="com.temenos.interaction.core.hypermedia.ResourceState">
                        <constructor-arg name="entityName" value="Metadata" />
                        <constructor-arg name="name" value="initial" />
                        <constructor-arg>
                            <list>
                                <bean class="com.temenos.interaction.core.hypermedia.Action">
                                    <constructor-arg value="GETMetadata" />
                                    <constructor-arg value="VIEW" />
                                </bean>
                            </list>
                        </constructor-arg>
                        <constructor-arg name="path" value="/$metadata" />
                    </bean>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg ref="metadata" />
    </bean>
	
	<bean id="executorService" class="java.util.concurrent.Executors" factory-method="newSingleThreadScheduledExecutor" />
	
	<bean id="rimDirWatchdog" class="com.temenos.interaction.loader.detector.DirectoryChangeActionNotifier">
	   <constructor-arg name="executorService" type="java.util.concurrent.ScheduledExecutorService" ref="executorService" />
	   <property name="resources">
	       <list>
	           <value>D:\\DevUtils\\myrepos\\master-s2\\interaction-dsl\\interaction-translate\\target\\classes\\hot-deploy-dir</value>
	       </list>
       </property>
	   <property name="listeners">
	        <ref bean="updateAfterChangeRIMAction" />
	    </property>
	</bean>
	
	<bean id="updateAfterChangeRIMAction" class="com.temenos.interaction.translate.loader.ResourceSetGeneratorAction">
		<property name="resourceStateProvider" ref="resourceStateProvider" />
	</bean>
	
		<!-- Commands -->
	<bean id="GETServiceDocument" class="com.temenos.interaction.commands.odata.GETMetadataCommand">
		<constructor-arg value="ServiceDocument" />
		<constructor-arg ref="metadataOData4j" />
	</bean>
	
	<bean id="GETMetadata" class="com.temenos.interaction.commands.odata.GETMetadataCommand">
		<constructor-arg value="Metadata" />
		<constructor-arg ref="metadataOData4j" />
	</bean>
	
	<bean id="GETTestController" class="com.temenos.interaction.translate.test.stub.controller.GETTestController" />

	<bean id="configLoader" class="com.temenos.interaction.core.resource.ConfigLoader"/>
	
	<!--
	  An extension of org.apache.wink.spring.Registrar with support for singletons.
    -->
	<bean id="winkRegistrar" class="com.temenos.interaction.winkext.RegistrarWithSingletons">
		<property name="singletons">
        	<set>
				<ref local="atomProvider" />
				<ref local="edmxProvider" />
				<ref local="serviceDocumentProvider" />
				<ref local="errorProvider" />
 			</set>
   		</property>
		<property name="serviceRootFactory" ref="serviceRootFactory" />
        <property name="serviceRoots">
            <set>
                <ref local="Metadata" />
            </set>
        </property>
	</bean>
	
	<bean id="atomProvider" class="com.temenos.interaction.media.odata.xml.atom.AtomXMLProvider">
    	<constructor-arg name="metadataOData4j" ref="metadataOData4j" />
		<constructor-arg name="metadata" ref="metadata" />
		<constructor-arg name="resourceStateProvider" ref="resourceStateProvider" />
		<constructor-arg name="serviceDocument" ref="serviceDocument" />
    	<constructor-arg><bean class="com.temenos.interaction.commands.odata.OEntityTransformer" /></constructor-arg>
	</bean>
    <bean id="edmxProvider" class="com.temenos.interaction.media.odata.xml.edmx.EdmxMetaDataProvider" />
    <bean id="serviceDocumentProvider" class="com.temenos.interaction.media.odata.xml.atomsvc.ServiceDocumentProvider">
        <constructor-arg name="hypermediaEngine" ref="stateMachine" />
	</bean>
    <bean id="errorProvider" class="com.temenos.interaction.media.odata.xml.error.ErrorProvider" />
	
	<!-- Command controller -->
	<bean id="commands" class="com.temenos.interaction.core.command.MapBasedCommandController">
		<constructor-arg name="commandMap">
			<util:map id="commandsMap" map-class="java.util.Hashtable">
				<entry key="GETServiceDocument" value-ref="GETServiceDocument" />
				<entry key="GETMetadata" value-ref="GETMetadata" />
				<entry key="GETTestController" value-ref="GETTestController" />
			</util:map> 
		</constructor-arg>
	</bean> 
</beans>