<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- Initialise JPA for MockResponder -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="NoteServiceHibernate" />		
	</bean>
	<!-- Create the MockResponder factory, at the moment this also initialises the Mock database -->
	<bean id="mockResponderFactory" class="com.temenos.interaction.example.note.NoteProducerFactory" />
	<!-- MockResponder JPA Producer -->
	<bean id="producer" class="org.odata4j.producer.jpa.JPAProducer">
		<constructor-arg name="emf" ref="entityManagerFactory" />
		<constructor-arg name="namespace" value="InteractionExample" />		
		<constructor-arg name="maxResults" value="100" />				
	</bean>
	<bean id="edmDataServices" factory-bean="producer" factory-method="getMetadata"/>
	<bean id="functionsProducer" class="com.temenos.interaction.example.note.NewFunctionProducer">
		<constructor-arg name="emf" ref="entityManagerFactory" />		
		<constructor-arg name="odataNamespace" value="InteractionExample" />
		<constructor-arg name="jpaProducer" ref="producer" />				
	</bean>

<!--
	An extension of org.apache.wink.spring.Registrar with support for singletons.
-->
	<bean class="com.temenos.interaction.winkext.RegistrarWithSingletons">
		<property name="singletons">
        	<set>
        		<ref local="jaxbContextResolver" />
				<ref local="halProvider" />
				<ref local="atomProvider" />
 			</set>
   		</property>
		<property name="instances">
			<set>
				<ref bean="JAXB-NOTE" />
			</set>
		</property>
		<property name="resourceRegistry" ref="resourceRegistry" />
	</bean>

	<bean id="jaxbContextResolver" class="com.temenos.interaction.example.app.JAXBContextResolver" />
	<bean id="halProvider" class="com.temenos.interaction.core.media.hal.HALProvider">
    	<constructor-arg name="edmDataServices" ref="edmDataServices" />
	</bean>
	<bean id="atomProvider" class="com.temenos.interaction.core.media.atom.AtomXMLProvider">
    	<constructor-arg name="edmDataServices" ref="edmDataServices" />
		<constructor-arg name="resourceRegistry" ref="resourceRegistry" />
	</bean>


    <bean id="resourceRegistry" class="com.temenos.interaction.core.link.ResourceRegistry">
    	<constructor-arg name="edmDataServices" ref="edmDataServices" />
      	<constructor-arg name="root" ref="DYNA_NOTE" />
    </bean>

    <bean id="behaviour" class="com.temenos.interaction.example.note.Behaviour" />
    <bean id="initialNoteState" factory-bean="behaviour" factory-method="getNotesResoruceInteractionModel"/>

    <!-- Simple Notes resource state model -->
    <bean id="stateMachine" class="com.temenos.interaction.core.link.ResourceStateMachine">
    	<constructor-arg name="initialState" ref="initialNoteState" />
    </bean>

    <bean id="DYNA_NOTE" class="com.temenos.interaction.core.dynaresource.HTTPDynaRIM">
    	<constructor-arg name="stateMachine" ref="stateMachine" />
    	<constructor-arg name="path" value="/notes" />
    	<constructor-arg name="resourceRegistry"><null/></constructor-arg>
    	<constructor-arg name="commandController" ref="noteCommands" />
    </bean>
    
    <bean id="noteCommands" class="com.temenos.interaction.core.command.CommandController">
        <constructor-arg name="commands">
            <map>
                 <entry>
                    <key><value>GET+/notes</value></key>
                    <bean class="com.temenos.interaction.commands.odata.GETEntitiesCommand">
                        <constructor-arg name="entitySetName" value="note" />
                        <constructor-arg name="producer" ref="producer" />
                    </bean>
                 </entry>
                 <entry>
                    <key><value>GET+/notes/{id}</value></key>
                    <bean class="com.temenos.interaction.commands.odata.GETEntityCommand">
                        <constructor-arg name="entity" value="note" />
                        <constructor-arg name="producer" ref="producer" />
                    </bean>
                </entry>
                <entry>
                    <key><value>PUT+/notes/{id}</value></key>
                    <bean class="com.temenos.interaction.example.note.OEntityPutNoteCommand">
                        <constructor-arg name="producer" ref="producer" />
                    </bean>
                </entry>
                <entry>
                    <key><value>DELETE+/notes/{id}</value></key>
                    <bean class="com.temenos.interaction.example.note.DeleteNoteCommand">
                        <constructor-arg name="producer" ref="producer" />
                    </bean>
                </entry>
                <entry>
                    <key><value>GET+/notes/new</value></key>
                    <bean class="com.temenos.interaction.example.note.GETNewNoteCommand">
                        <constructor-arg name="domainObjectName" value="NOTE" />
                        <constructor-arg name="producer" ref="functionsProducer" />
                    </bean>
                </entry>
                <entry>
                    <key><value>POST+/notes/new</value></key>
                    <bean class="com.temenos.interaction.commands.odata.POSTNewCommand">
                        <constructor-arg name="entitySetName" value="ID" />
                        <constructor-arg name="domainObjectName" value="NOTE" />
                        <constructor-arg name="targetResource" value="test" />
                        <constructor-arg name="producer" ref="functionsProducer" />
                    </bean>
                </entry>
            </map>
        </constructor-arg>
    </bean>

     <bean id="OEntity-NOTE" class="com.temenos.interaction.example.note.OEntityNoteRIM">
    	<constructor-arg name="producer" ref="producer" />
    </bean>
    <bean id="JAXB-NOTE" class="com.temenos.interaction.example.note.JAXBNoteRIM">
    	<constructor-arg name="producer" ref="producer" />
    </bean>

</beans>