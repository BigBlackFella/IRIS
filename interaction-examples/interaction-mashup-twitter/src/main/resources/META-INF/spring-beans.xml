<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Read property files -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:responder.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>

	<!-- Metadata -->	
	<bean id="metadataManager" class="com.temenos.interaction.core.resource.ResourceMetadataManager" />
	<bean id="edmDataServices" factory-bean="metadataManager" factory-method="getOData4jMetadata"/>
	<bean id="edmMetadata" factory-bean="metadataManager" factory-method="getMetadata"/>

	<!-- Import Resource manager context -->
	<import resource="classpath:/META-INF/resourcemanager-context.xml" />

    <!-- Persistence manager -->
    <bean id="persistence" class="com.temenos.interaction.example.mashup.twitter.Persistence" >
        <constructor-arg ref="entityManagerFactory" />
    </bean>

    <!--
	  An extension of org.apache.wink.spring.Registrar with support for singletons.
    -->
	<bean class="com.temenos.interaction.winkext.RegistrarWithSingletons">
		<property name="singletons">
        	<set>
				<ref local="halProvider" />
 			</set>
   		</property>
		<property name="serviceRoot" ref="ServiceRoot" />
	</bean>

	<bean id="halProvider" class="com.temenos.interaction.core.media.hal.HALProvider">
    	<constructor-arg ref="edmMetadata" />
        <constructor-arg ref="stateMachine" />
	</bean>

    <bean id="behaviour" class="com.temenos.interaction.example.mashup.twitter.Behaviour" />
    <bean id="interaction" factory-bean="behaviour" factory-method="getInteractionModel" />
    <bean id="stateMachine" class="com.temenos.interaction.core.hypermedia.ResourceStateMachine">
    	<constructor-arg ref="interaction" />
        <constructor-arg><bean class="com.temenos.interaction.core.hypermedia.BeanTransformer" /></constructor-arg>
    </bean>

    <!-- Resources -->
    <bean id="ServiceRoot" class="com.temenos.interaction.core.rim.HTTPHypermediaRIM">
        <constructor-arg ref="commands" />
    	<constructor-arg ref="stateMachine" />
    </bean>

	<!-- Commands -->
	<bean id="cmdGetServiceRoot" class="com.temenos.interaction.core.command.NoopGETCommand" />
	<bean id="cmdGETUsers" class="com.temenos.interaction.example.mashup.twitter.GETUsersCommand">
		<constructor-arg ref="persistence" />
	</bean>
	<bean id="cmdGETUser" class="com.temenos.interaction.example.mashup.twitter.GETUserCommand">
		<constructor-arg ref="persistence" />
	</bean>
	<bean id="cmdGETTweets" class="com.temenos.interaction.example.mashup.twitter.GETUserTwitterUpdatesCommand" />
	<bean id="cmdGETTweet" class="com.temenos.interaction.core.command.NoopGETCommand" />

	<!-- Resource commands -->
	<bean id="commands" class="com.temenos.interaction.core.command.NewCommandController">
		<constructor-arg name="commands">
			<util:map id="commandsMap" map-class="java.util.Hashtable">
				<entry key="GET+/" value-ref="cmdGetServiceRoot" />
				<entry key="GET+/users" value-ref="cmdGETUsers" />
				<entry key="GET+/users/{userID}" value-ref="cmdGETUser" />
				<entry key="GET+/tweets/{username}" value-ref="cmdGETTweets" />
				<entry key="GET+/tweets/{username}/{tweet}" value-ref="cmdGETTweet" />
			</util:map> 
		</constructor-arg>
	</bean>
</beans>