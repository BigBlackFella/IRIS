<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           classpath:org/springframework/beans/factory/xml/spring-beans-2.5.xsd">

	<!-- Initialise JPA for MockResponder -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
			<property name="persistenceUnitName" value="ResponderServiceHibernate" />		
	</bean>
	
	<!-- Initialise responder database -->
	<bean factory-method="fillDatabase" class="com.temenos.interaction.sdk.util.ResponderDBUtils" />

	<!-- Metadata -->	
	<bean id="metadataManager" class="com.temenos.interaction.core.resource.ResourceMetadataManager" />
	<bean id="edmDataServices" factory-bean="metadataManager" factory-method="getMetadata"/>
	
	<!-- Producers -->
	<bean id="mockProducer" class="org.odata4j.producer.jpa.JPAProducer">
		<constructor-arg ref="entityManagerFactory" />
		<constructor-arg value="MockResponderSDK" />		
		<constructor-arg value="100" />				
	</bean>
	<bean id="functionsProducer" class="com.temenos.interaction.example.note.NewFunctionProducer">
        <constructor-arg ref="entityManagerFactory" />       
        <constructor-arg value="InteractionExample" />
        <constructor-arg ref="mockProducer" />               
    </bean>
	
    <!--
	  An extension of org.apache.wink.spring.Registrar with support for singletons.
    -->
	<bean class="com.temenos.interaction.winkext.RegistrarWithSingletons">
		<property name="singletons">
        	<set>
				<ref local="halProvider" />
 			</set>
   		</property>
		<property name="serviceRoot" ref="ServiceRoot" />
	</bean>

	<bean id="halProvider" class="com.temenos.interaction.core.media.hal.HALProvider">
    	<constructor-arg ref="edmDataServices" />
	</bean>

    <bean id="behaviour" class="com.temenos.interaction.example.hateoas.simple.Behaviour" />
    <bean id="interaction" factory-bean="behaviour" factory-method="getInteractionModel" />
    <bean id="stateMachine" class="com.temenos.interaction.core.link.ResourceStateMachine">
    	<constructor-arg ref="interaction" />
    </bean>

    <!-- Resources -->
    <bean id="ServiceRoot" class="com.temenos.interaction.core.dynaresource.HTTPDynaRIM">
    	<constructor-arg ref="stateMachine" />
    	<constructor-arg><null/></constructor-arg>
    	<constructor-arg ref="commands" />
    </bean>

    <!-- Commands -->
    <bean id="commands" class="com.temenos.interaction.core.command.CommandController">
    	<constructor-arg>
            <map>
                <entry>
                    <key><value>GET+/</value></key>
                    <bean class="com.temenos.interaction.example.hateoas.simple.GETServiceRootCommand" />
                </entry>
                <entry>
                    <key><value>GET+/profile</value></key>
                    <bean class="com.temenos.interaction.core.command.NoopGETCommand" />
                </entry>
                <entry>
                    <key><value>GET+/preferences</value></key>
                    <bean class="com.temenos.interaction.example.hateoas.simple.GETPreferencesCommand" />
                </entry>
               <entry>
                    <key><value>GET+/notes</value></key>
                    <bean class="com.temenos.interaction.commands.odata.GETEntitiesCommand">
                        <constructor-arg value="note" />
                        <constructor-arg ref="mockProducer" />
                    </bean>
                 </entry>
                 <entry>
                    <key><value>GET+/notes/{id}</value></key>
                    <bean class="com.temenos.interaction.commands.odata.GETEntityCommand">
                        <constructor-arg value="note" />
                        <constructor-arg ref="mockProducer" />
                    </bean>
                </entry>
                <entry>
                    <key><value>PUT+/notes/{id}</value></key>
                    <bean class="com.temenos.interaction.example.note.OEntityPutNoteCommand">
                        <constructor-arg ref="mockProducer" />
                    </bean>
                </entry>
                <entry>
                    <key><value>DELETE+/notes/{id}</value></key>
                    <bean class="com.temenos.interaction.example.note.DeleteNoteCommand">
                        <constructor-arg ref="mockProducer" />
                    </bean>
                </entry>
                <entry>
                    <key><value>GET+/notes/new</value></key>
                    <bean class="com.temenos.interaction.core.command.NoopGETCommand" />
                    <!--
                    <bean class="com.temenos.interaction.example.note.GETNewNoteCommand">
                        <constructor-arg name="domainObjectName" value="NOTE" />
                        <constructor-arg name="producer" ref="functionsProducer" />
                    </bean>
                    -->
                </entry>
                <entry>
                    <key><value>POST+/notes/new</value></key>
                    <bean class="com.temenos.interaction.core.command.NoopPOSTCommand" />
                    <!--
                    <bean class="com.temenos.interaction.commands.odata.POSTNewCommand">
                        <constructor-arg value="ID" />
                        <constructor-arg value="NOTE" />
                        <constructor-arg value="test" />
                        <constructor-arg ref="functionsProducer" />
                    </bean>
                    -->
                </entry>
            </map>
        </constructor-arg>
    </bean>

</beans>