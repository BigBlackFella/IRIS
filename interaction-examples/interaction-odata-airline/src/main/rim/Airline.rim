domain AirlineModel {
rim Airline {

event GET {
	method: GET
}
event PUT {
	method: PUT
}
event POST {
	method: POST
}
event DELETE {
	method: DELETE
}

command GETServiceDocument
command GETException
command GETEntity
command GETEntities
command CreateEntity
command GETNavProperty
command UpdateEntity
command DeleteEntity
command NoopGET
command GETGenericErrorCommand
command ThrowInteractionExceptionCommand

initial resource ServiceDocument {
	type: item
	entity: ServiceDocument
	view { GETServiceDocument }
	path "/"
	GET -> Airports
	GET -> Flights
	GET -> FlightSchedules
	GET -> Passengers
	GET -> Extended
}

exception resource AirlineException {
	type: item
	entity: Exception
	view { GETException }
}

resource Airports {
	type: collection
	entity: Airport
	view { GETEntities }
	path "/Airports()"
	POST -> airport_pseudo_created
	PUT *-> airport_pseudo_updated id=code
	DELETE *-> airport_pseudo_deleted id=code
	GET *-> airport id=code
	GET title="departures" *-> airport_departures id=code, filter="departureAirportCode eq '{code}'"
	GET title="arrivals" *-> airport_arrivals id=code, filter="arrivalAirportCode eq '{code}'"
}

resource airport {
	type: item
	entity: Airport
	view { GETEntity }
	path "/Airports('{id}')"
	PUT -> airport_pseudo_updated id=code
	DELETE -> airport_pseudo_deleted id=code
	GET title="departures" -> airport_departures id=code
	GET title="arrivals" -> airport_arrivals id=code
}

resource airport_departures {
	type: collection
	entity: FlightSchedule
	view { GETEntities filter="departureAirportCode eq '{id}'" }
	path "/Airports('{id}')/departures"
	POST -> flightschedule_pseudo_created
	PUT *-> flightschedule_pseudo_updated id=flightScheduleID
	DELETE *-> flightschedule_pseudo_deleted id=flightScheduleID
	GET *-> flightschedule id=flightScheduleID
	GET title="departureAirport" *-> flightschedule_departureAirport id=flightScheduleID
	GET title="arrivalAirport" *-> flightschedule_arrivalAirport id=flightScheduleID
	GET title="flights" *-> flightschedule_flights id=flightScheduleID, filter="flightScheduleNum eq '{flightScheduleID}'"
	GET *-> flightschedule_pseudo_created id=flightScheduleID
	GET *-> flightschedule_pseudo_updated id=flightScheduleID
	GET *-> flightschedule_pseudo_deleted id=flightScheduleID
}

resource airport_arrivals {
	type: collection
	entity: FlightSchedule
	view { GETEntities filter="arrivalAirportCode eq '{id}'" }
	path "/Airports('{id}')/arrivals"
	POST -> flightschedule_pseudo_created
	PUT *-> flightschedule_pseudo_updated id=flightScheduleID
	DELETE *-> flightschedule_pseudo_deleted id=flightScheduleID
	GET *-> flightschedule id=flightScheduleID
	GET title="departureAirport" *-> flightschedule_departureAirport id=flightScheduleID
	GET title="arrivalAirport" *-> flightschedule_arrivalAirport id=flightScheduleID
	GET title="flights" *-> flightschedule_flights id=flightScheduleID, filter="flightScheduleNum eq '{flightScheduleID}'"
	GET *-> flightschedule_pseudo_created id=flightScheduleID
	GET *-> flightschedule_pseudo_updated id=flightScheduleID
	GET *-> flightschedule_pseudo_deleted id=flightScheduleID
}

resource airport_pseudo_created {
	type: item
	entity: Airport
	actions { CreateEntity }
	path "/Airports()"
	GET --> airport id=code
}

resource airport_pseudo_updated {
	type: item
	entity: Airport
	actions { UpdateEntity }
	relations { "edit" }
	path "/Airports('{id}')"
}

resource airport_pseudo_deleted {
	type: item
	entity: Airport
	actions { DeleteEntity }
	relations { "edit" }
	path "/Airports('{id}')"
}

resource Flights {
	type: collection
	entity: Flight
	view { GETEntities }
	path "/Flights()"
	POST -> flight_pseudo_created
	PUT *-> flight_pseudo_updated id=flightID
	DELETE *-> flight_pseudo_deleted id=flightID
	GET *-> flight id=flightID
	GET title="flightSchedule" *-> flight_flightSchedule id=flightID
}

resource flight {
	type: item
	entity: Flight
	view { GETEntity }
	path "/Flights({id})"
	PUT -> flight_pseudo_updated id=flightID
	DELETE -> flight_pseudo_deleted id=flightID
	GET title="flightSchedule" -> flight_flightSchedule id=flightID
}

resource flight_flightSchedule {
	type: item
	entity: FlightSchedule
	view { GETNavProperty navproperty="flightSchedule", entity=Flight }
	path "/Flights({id})/flightSchedule"
}

resource flight_pseudo_created {
	type: item
	entity: Flight
	actions { CreateEntity }
	path "/Flights()"
    GET --> flight id=flightScheduleID
}

resource flight_pseudo_updated {
	type: item
	entity: Flight
	actions { UpdateEntity }
	relations { "edit" }
	path "/Flights({id})"
}

resource flight_pseudo_deleted {
	type: item
	entity: Flight
	actions { DeleteEntity }
	relations { "edit" }
	path "/Flights({id})"
}

resource FlightSchedules {
	type: collection
	entity: FlightSchedule
	view { GETEntities }
	path "/FlightSchedules()"
	POST -> flightschedule_pseudo_created
	PUT *-> flightschedule_pseudo_updated id=flightScheduleID
	DELETE *-> flightschedule_pseudo_deleted id=flightScheduleID
	GET *-> flightschedule id=flightScheduleID
	GET title="departureAirport" *-> flightschedule_departureAirport id=flightScheduleID
	GET title="arrivalAirport" *-> flightschedule_arrivalAirport id=flightScheduleID
	GET title="flights" *-> flightschedule_flights id=flightScheduleID, filter="flightScheduleNum eq '{flightScheduleID}'"
}

resource flightschedule {
	type: item
	entity: FlightSchedule
	view { GETEntity }
	path "/FlightSchedules({id})"
	PUT -> flightschedule_pseudo_updated id=flightScheduleID
	DELETE -> flightschedule_pseudo_deleted id=flightScheduleID
	GET title="departureAirport" -> flightschedule_departureAirport id=flightScheduleID
	GET title="arrivalAirport" -> flightschedule_arrivalAirport id=flightScheduleID
	GET title="flights" -> flightschedule_flights id=flightScheduleID, filter="flightScheduleNum eq '{flightScheduleID}'"
}


resource flightschedule_departureAirport {
	type: item
	entity: Airport
	view { GETNavProperty navproperty="departureAirport", entity=FlightSchedule }
	path "/FlightSchedules({id})/departureAirport"
}

resource flightschedule_arrivalAirport {
	type: item
	entity: Airport
	view { GETNavProperty navproperty="arrivalAirport", entity=FlightSchedule }
	path "/FlightSchedules({id})/arrivalAirport"
}

resource flightschedule_flights {
	type: collection
	entity: Flight
	view { GETEntities filter=filter }
	path "/FlightSchedules({id})/flights"
	POST -> flight_pseudo_created
	PUT *-> flight_pseudo_updated id=flightID
	DELETE *-> flight_pseudo_deleted id=flightID
	GET *-> flight id=flightID
	GET title="flightSchedule" *-> flight_flightSchedule id=flightID
	GET *-> flight_pseudo_created id=flightID
	GET *-> flight_pseudo_updated id=flightID
	GET *-> flight_pseudo_deleted id=flightID
}

resource flightschedule_pseudo_created {
	type: item
	entity: FlightSchedule
	actions { CreateEntity }
	path "/FlightSchedules()"
    GET --> flightschedule id=flightScheduleID
}

resource flightschedule_pseudo_updated {
	type: item
	entity: FlightSchedule
	actions { UpdateEntity }
	relations { "edit" }
	path "/FlightSchedules({id})"
}

resource flightschedule_pseudo_deleted {
	type: item
	entity: FlightSchedule
	actions { DeleteEntity }
	relations { "edit" }
	path "/FlightSchedules({id})"
}

resource Passengers {
	type: collection
	entity: Passenger
	view { GETEntities }
	path "/Passengers()"
	POST -> passenger_pseudo_created
	PUT *-> passenger_pseudo_updated id=passengerNo
	DELETE *-> passenger_pseudo_deleted id=passengerNo
	GET *-> passenger id=passengerNo
	GET title="flight" *-> passenger_flight id=passengerNo
}

resource passenger {
	type: item
	entity: Passenger
	view { GETEntity }
	path "/Passengers({id})"
	PUT -> passenger_pseudo_updated id=passengerNo
	DELETE -> passenger_pseudo_deleted id=passengerNo
	GET title="flight" -> passenger_flight id=passengerNo
}


resource passenger_pseudo_created {
	type: item
	entity: Passenger
	actions { CreateEntity }
	path "/Passengers()"
    GET --> passenger
}

resource passenger_pseudo_updated {
	type: item
	entity: Passenger
	actions { UpdateEntity }
	relations { "edit" }
	path "/Passengers({id})"
}

resource passenger_pseudo_deleted {
	type: item
	entity: Passenger
	actions { DeleteEntity }
	relations { "edit" }
	path "/Passengers({id})"
}

resource passenger_flight {
	type: item
	entity: Flight
	view { GETNavProperty navproperty="flight", entity=Passenger }
	path "/Passenger({id})/flight"
}

resource Extended {
	type: item
	entity: ServiceDocument
	view { NoopGET }
	path "/Extended({id})"
	GET title="throw 503 error" -> error503 id=flightID
	GET title="throw 504 error" -> error504 id=flightID
	GET title="throw 500 server runtime exception" -> error500RuntimeException id=flightID
	GET title="throw 403 error" -> error403 id=flightID
	GET title="throw 500 request failure" -> error500RequestFailure id=flightID
	GET title="throw 400 error" -> error400 id=flightID
	GET title="throw 404 error" -> error404 id=flightID
}

resource error503 {
	type: item
	entity: Flight
	view { ThrowInteractionExceptionCommand status="503", message="Failed to connect to resource manager." }
	path "/Extended({id})/error503"
}

resource error504 {
	type: item
	entity: Flight
	view { ThrowInteractionExceptionCommand status="504", message="Request has timed out." }
	path "/Extended({id})/error504"
}

resource error500RuntimeException {
	type: item
	entity: Flight
	view { ThrowInteractionExceptionCommand status="500", message="Unexpected error." }
	path "/Extended({id})/error500RuntimeException"
}

resource error403 {
	type: item
	entity: Flight
	view { ThrowInteractionExceptionCommand status="403", message="User is not allowed to access this resource." }
	path "/Extended({id})/error403"
}

resource error500RequestFailure {
	type: item
	entity: Flight
	view { GETGenericErrorCommand code="FAILURE", message="Error while processing request." }
	path "/Extended({id})/error500RequestFailure"
}

resource error400 {
	type: item
	entity: Flight
	view { GETGenericErrorCommand code="INVALID_REQUEST", message="Resource manager: 4 validation errors." }
	path "/Extended({id})/error400"
}

resource error404 {
	type: item
	entity: Flight
	view { ThrowInteractionExceptionCommand status="404", message="Resource manager: entity not found or currently unavailable." }
	path "/Extended({id})/error404"
	onerror --> errorHandler
}

resource errorHandler {
	type: item
	entity: Exception
	view { GETException }
}

}
}