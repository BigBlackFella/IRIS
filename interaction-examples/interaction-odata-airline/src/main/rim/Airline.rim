events
	GET GET
	POST POST
	PUT PUT
	DELETE DELETE
end

commands
	GETServiceDocument
	GETEntity
	GETEntities
	CreateEntity
	GETNavProperty
	UpdateEntity
	DeleteEntity
	NoopGETCommand
	GETGenericErrorCommand
	GETThrowRuntimeExceptionCommand
end

initial resource ServiceDocument
	item ServiceDocument
	view { GETServiceDocument }
	path "/"
	GET -> Airports
	GET -> Flights
	GET -> FlightSchedules
	GET -> Passengers
	GET -> Extended
end

resource Airports
	collection Airport
	view { GETEntities }
	path "/Airports()"
	POST -> airport_pseudo_created
	PUT *-> airport_pseudo_updated id=code
	DELETE *-> airport_pseudo_deleted id=code
	GET *-> airport id=code
	GET title="departures" *-> airport_departures id=code, filter="departureAirportCode eq '{code}'"
	GET title="arrivals" *-> airport_arrivals id=code, filter="arrivalAirportCode eq '{code}'"
end

resource airport
	item Airport
	view { GETEntity }
	path "/Airports('{id}')"
	PUT -> airport_pseudo_updated id=code
	DELETE -> airport_pseudo_deleted id=code
	GET title="departures" -> airport_departures id=code, filter="departureAirportCode eq '{code}'"
	GET title="arrivals" -> airport_arrivals id=code, filter="arrivalAirportCode eq '{code}'"
end

resource airport_departures
	collection FlightSchedule
	view { GETEntities filter=filter }
	path "/Airports('{id}')/departures"
	POST -> flightschedule_pseudo_created
	PUT *-> flightschedule_pseudo_updated id=flightScheduleID
	DELETE *-> flightschedule_pseudo_deleted id=flightScheduleID
	GET *-> flightschedule id=flightScheduleID
	GET title="departureAirport" *-> flightschedule_departureAirport id=flightScheduleID
	GET title="arrivalAirport" *-> flightschedule_arrivalAirport id=flightScheduleID
	GET title="flights" *-> flightschedule_flights id=flightScheduleID, filter="flightScheduleNum eq '{flightScheduleID}'"
	GET *-> flightschedule_pseudo_created id=flightScheduleID
	GET *-> flightschedule_pseudo_updated id=flightScheduleID
	GET *-> flightschedule_pseudo_deleted id=flightScheduleID
end

resource airport_arrivals
	collection FlightSchedule
	view { GETEntities filter=filter }
	path "/Airports('{id}')/arrivals"
	POST -> flightschedule_pseudo_created
	PUT *-> flightschedule_pseudo_updated id=flightScheduleID
	DELETE *-> flightschedule_pseudo_deleted id=flightScheduleID
	GET *-> flightschedule id=flightScheduleID
	GET title="departureAirport" *-> flightschedule_departureAirport id=flightScheduleID
	GET title="arrivalAirport" *-> flightschedule_arrivalAirport id=flightScheduleID
	GET title="flights" *-> flightschedule_flights id=flightScheduleID, filter="flightScheduleNum eq '{flightScheduleID}'"
	GET *-> flightschedule_pseudo_created id=flightScheduleID
	GET *-> flightschedule_pseudo_updated id=flightScheduleID
	GET *-> flightschedule_pseudo_deleted id=flightScheduleID
end

resource airport_pseudo_created
	item Airport
	actions { CreateEntity }
	path "/Airports()"
	GET --> airport
end

resource airport_pseudo_updated
	item Airport
	actions { UpdateEntity }
	relations { "edit" }
	path "/Airports('{id}')"
end

resource airport_pseudo_deleted
	item Airport
	actions { DeleteEntity }
	relations { "edit" }
	path "/Airports('{id}')"
end

resource Flights
	collection Flight
	view { GETEntities }
	path "/Flights()"
	POST -> flight_pseudo_created
	PUT *-> flight_pseudo_updated id=flightID
	DELETE *-> flight_pseudo_deleted id=flightID
	GET *-> flight id=flightID
	GET title="flightSchedule" *-> flight_flightSchedule id=flightID
end

resource flight
	item Flight
	view { GETEntity }
	path "/Flights({id})"
	PUT -> flight_pseudo_updated id=flightID
	DELETE -> flight_pseudo_deleted id=flightID
	GET title="flightSchedule" -> flight_flightSchedule id=flightID
end

resource flight_flightSchedule
	item FlightSchedule
	view { GETNavProperty navproperty="flightSchedule", entity=Flight }
	path "/Flights({id})/flightSchedule"
end

resource flight_pseudo_created
	item Flight
	actions { CreateEntity }
	path "/Flights()"
    GET --> flight	
end

resource flight_pseudo_updated
	item Flight
	actions { UpdateEntity }
	relations { "edit" }
	path "/Flights({id})"
end

resource flight_pseudo_deleted
	item Flight
	actions { DeleteEntity }
	relations { "edit" }
	path "/Flights({id})"
end

resource FlightSchedules
	collection FlightSchedule
	view { GETEntities }
	path "/FlightSchedules()"
	POST -> flightschedule_pseudo_created
	PUT *-> flightschedule_pseudo_updated id=flightScheduleID
	DELETE *-> flightschedule_pseudo_deleted id=flightScheduleID
	GET *-> flightschedule id=flightScheduleID
	GET title="departureAirport" *-> flightschedule_departureAirport id=flightScheduleID
	GET title="arrivalAirport" *-> flightschedule_arrivalAirport id=flightScheduleID
	GET title="flights" *-> flightschedule_flights id=flightScheduleID, filter="flightScheduleNum eq '{flightScheduleID}'"
end

resource flightschedule
	item FlightSchedule
	view { GETEntity }
	path "/FlightSchedules({id})"
	PUT -> flightschedule_pseudo_updated id=flightScheduleID
	DELETE -> flightschedule_pseudo_deleted id=flightScheduleID
	GET title="departureAirport" -> flightschedule_departureAirport id=flightScheduleID
	GET title="arrivalAirport" -> flightschedule_arrivalAirport id=flightScheduleID
	GET title="flights" -> flightschedule_flights id=flightScheduleID, filter="flightScheduleNum eq '{flightScheduleID}'"
end


resource flightschedule_departureAirport
	item Airport
	view { GETNavProperty navproperty="departureAirport", entity=FlightSchedule }
	path "/FlightSchedules({id})/departureAirport"
end

resource flightschedule_arrivalAirport
	item Airport
	view { GETNavProperty navproperty="arrivalAirport", entity=FlightSchedule }
	path "/FlightSchedules({id})/arrivalAirport"
end

resource flightschedule_flights
	collection Flight
	view { GETEntities filter=filter }
	path "/FlightSchedules({id})/flights"
	POST -> flight_pseudo_created
	PUT *-> flight_pseudo_updated id=flightID
	DELETE *-> flight_pseudo_deleted id=flightID
	GET *-> flight id=flightID
	GET title="flightSchedule" *-> flight_flightSchedule id=flightID
	GET *-> flight_pseudo_created id=flightID
	GET *-> flight_pseudo_updated id=flightID
	GET *-> flight_pseudo_deleted id=flightID
end

resource flightschedule_pseudo_created
	item FlightSchedule
	actions { CreateEntity }
	path "/FlightSchedules()"
    GET --> flightschedule id=flightScheduleID
end

resource flightschedule_pseudo_updated
	item FlightSchedule
	actions { UpdateEntity }
	relations { "edit" }
	path "/FlightSchedules({id})"
end

resource flightschedule_pseudo_deleted
	item FlightSchedule
	actions { DeleteEntity }
	relations { "edit" }
	path "/FlightSchedules({id})"
end

resource Passengers
	collection Passenger
	view { GETEntities }
	path "/Passengers()"
	POST -> passenger_pseudo_created
	PUT *-> passenger_pseudo_updated id=passengerNo
	DELETE *-> passenger_pseudo_deleted id=passengerNo
	GET *-> passenger id=passengerNo
	GET title="flight" *-> passenger_flight id=passengerNo
end

resource passenger
	item Passenger
	view { GETEntity }
	path "/Passengers({id})"
	PUT -> passenger_pseudo_updated id=passengerNo
	DELETE -> passenger_pseudo_deleted id=passengerNo
	GET title="flight" -> passenger_flight id=passengerNo
end


resource passenger_pseudo_created
	item Passenger
	actions { CreateEntity }
	path "/Passengers()"
    GET --> passenger
end

resource passenger_pseudo_updated
	item Passenger
	actions { UpdateEntity }
	relations { "edit" }
	path "/Passengers({id})"
end

resource passenger_pseudo_deleted
	item Passenger
	actions { DeleteEntity }
	relations { "edit" }
	path "/Passengers({id})"
end

resource passenger_flight
	item Flight
	view { GETNavProperty navproperty="flight", entity=Passenger }
	path "/Passenger({id})/flight"
end

resource Extended
	item ServiceDocument
	view { NoopGETCommand }
	path "/Extended({id})"
	GET title="throw 503 error" -> error503 id=flightID
	GET title="throw 504 error" -> error504 id=flightID
	GET title="throw 500 server runtime exception" -> error500RuntimeException id=flightID
end

resource error503
	item Flight
	view { GETGenericErrorCommand code="UPSTREAM_SERVER_UNAVAILABLE", message="Failed to connect to resource manager." }
	path "/Extended({id})/error503"
end

resource error504
	item Flight
	view { GETGenericErrorCommand code="UPSTREAM_SERVER_TIMEOUT", message="Request has timed out." }
	path "/Extended({id})/error504"
end

resource error500RuntimeException
	item Flight
	view { GETThrowRuntimeExceptionCommand }
	path "/Extended({id})/error500RuntimeException"
end
