TODO:

test

Create a mockresponder archetype to generate odata and non odata mock responders.

Jersey server seems to support this type of @Path specification "/note{id: (\\(.+?\\))}" where the uri is matched based
	on a regex so /note(1) or /note(1.1.1) or other combinations required by OData are matched.  See @Path on org.odata.producer.resources.EntityRequestResource
	Need to possibly report an issue to Wink community project, or fix it as org.apache.wink.server.internal.registry.ResourceRegistry matcher logic
	does not match the resource at line 322 getMatchingRootResources.  For the time being wink will match resources based on "/nnnn({id})"

Supply RIM as constructor argument to Commands

Add StateMachine to RIM by using DynamicResource states, and State.getTransitions.  Transitions / Commands will need to have method and path.

Create CollectionResource with Properties and Links.

For non OData links, we need to rewrite OEntity OLinks to point to our resources.

Add getLinks to Resource Interaction Model.

Test & implement representation of CollectionResource to application/xml & application/json using default JAXB based Producer

Add <xml> or name=value way of populating responder database.

Submit JAX-RS Provider as alternative to this odata4j issue (109) http://code.google.com/p/odata4j/issues/detail?id=109&colspec=ID%20Type%20Status%20Priority%20Stars%20Milestone%20Owner%20Summary

Seems that if I navigate to http://localhost:8080/examples/rest/notes/2 with my browser I get 
	a message 'class com.temenos.interaction.example.note.Note not found with key 2'.  We don't want to leak 
	this information about classes, etc.

Implement atom/xml & json feed Producer's for EntitiesResponse
	using the odata4j AtomFeedFormatWriter and JsonFeedFormatWriter's

Implement &skiptoken conditional command/link in Resource Interaction Model state machine

Implement the ability to bind a command to a combination of mediatype + http method

Add to simple CRUD Note example and bind a GET command to application/xml and application/json to return JAXB EntityResource.  We 
	want to prove that it is possible to get a JAXB Java bean in xml and json.

Implement Generics for EntityResource and CollectionResource.  In addition to removing the cast for the getObject method, we will also have the ability to 
		select the correct provider based on whether they support that specific type of Object.  see AtomXMLProvider, as this is currently call even for
		non OEntity response objects.
	
Implement a dynamic link with semantic model of link condition in spring.  First simple link condition will be a value of a
	property in the same resource.

Implement a dynamic link condition with internal resource OK / NOT_FOUND

Implement a dynamic link condition with external resource OK / NOT_FOUND

Implement a super simple generic user agent

Implement a plain/text media type over OFS

Change acquistion project to use a few dynamic resources in a new interaction project

Implement SHARDI resource interaction base class

Create a integration test configuration to run in test JerseyTest or against external server.
