rim Banking {

	event AUTHORISE {
		method: PUT
	}
	event DELETE {
		method: DELETE
	}
	event GET {
		method: GET
	}
	event POST {
		method: POST
	}
	event PUT {
		method: PUT
	}
	event REVERSE {
		method: PUT
	}

	command AuthoriseEntity
	command CreateEntity
	command DeleteEntity
	command GETEntities
	command GETEntity
	command GETException
	command GETNavProperty
	command GETReversedEntities
	command GETReversedEntity
	command GETServiceDocument
	command NoopGET
	command ReverseEntity
	command UpdateEntity

initial resource ServiceDocument {
	type: item
	entity: ServiceDocument
	view { GETServiceDocument }
	path: "/"
	GET -> Sectors
	GET -> Errors
}

exception resource InteractionException {
	type: item
	entity: InteractionException
	view { GETException }
}

resource Errors {
	type: collection
	entity: Errors
	view { NoopGET }
}


resource Sectors {
	type: collection
	entity: Sector
	view { GETEntities filter=filter }
	path: "/Sectors()"
	GET title="unauthorised input records" -> Sectors_IAuth
	GET title="reversed records" -> Sectors_Reversed
	POST -> Sectors_input
	GET *-> sector id=SectorCode
	REVERSE title="reverse" *-> sector_reverse id=SectorCode
}

resource sector {
	type: item
	entity: Sector
	view { GETEntity }
	path: "/Sectors('{id}')"
	REVERSE title="reverse" -> sector_reverse id=SectorCode
}

resource sector_IAuth {
	type: item
	entity: Sector
	view { GETEntity }
	path: "/SectorsIAuth('{id}')"
	PUT title="authorise" -> sector_IAuth_authorise id=SectorCode
	DELETE title="delete" -> sector_IAuth_delete id=SectorCode
}

resource sector_IAuth_authorise {
	type: item
	entity: Sector
	actions { AuthoriseEntity }
	relations { "edit" }
	path: "/SectorsIAuth('{id}')/authorise"
	GET --> sector_IAuth (OK(sector_IAuth)) id=SectorCode
	GET --> sector (OK(sector)) id=SectorCode
}

resource sector_IAuth_delete {
	type: item
	entity: Sector
	actions { DeleteEntity }
	relations { "edit" }
	path: "/SectorsIAuth('{id}')/delete"
	GET --> sector (OK(sector)) id=SectorCode
}

resource sector_reverse {
	type: item
	entity: Sector
	actions { ReverseEntity }
	relations { "edit" }
	path: "/SectorsReversed('{id}')"
	GET --> sector_Reversed (OK(sector_Reversed)) id=SectorCode
}

resource sector_Reversed {
	type: item
	entity: Sector
	view { GETReversedEntity }
	path: "/SectorsReversed('{id}')"
}

resource Sectors_IAuth {
	type: collection
	entity: Sector
	view { GETEntities filter=filter }
	path: "/SectorsIAuth()"
	GET *-> sector_IAuth id=SectorCode
	PUT title="authorise" *-> sector_IAuth_authorise id=SectorCode
	DELETE title="delete" *-> sector_IAuth_delete id=SectorCode
}

resource Sectors_input {
	type: item
	entity: Sector
	actions { CreateEntity }
	path: "/Sectors()"
	GET --> sector_IAuth (OK(sector_IAuth)) id=SectorCode
	GET --> sector (OK(sector)) id=SectorCode
	onerror --> Errors
}

resource Sectors_Reversed {
	type: collection
	entity: Sector
	view { GETReversedEntities filter=filter }
	path: "/SectorsReversed()"
	GET *-> sector_Reversed id=SectorCode
}
}
