events
	GET GET
	POST POST
end

commands
#foreach ( $command in $commands.getRIMCommands() )
	$command
#end
#foreach ( $rsm in $rim.getResourceStateMachines() )
#foreach ( $transition in $rsm.getTransitions() )
#if (!$transition.isUniqueTransition()) 
	GETNavProperty${transition.getTargetStateName()} entity=${rsm.getEntityName()}, navproperty=nav${transition.getTargetStateName()}
#end
#end
#end
end

initial resource ServiceDocument
	item ServiceDocument
	view { GETServiceDocument }
	path "/"
#foreach ( $rsm in $rim.getResourceStateMachines() )
	GET -> ${rsm.getCollectionStateName()}
#end
end

#foreach ( $rsm in $rim.getResourceStateMachines() )
#* Collection resource state*#
resource ${rsm.getCollectionStateName()}
	collection ${rsm.getEntityName()}
	view { GETEntities }
	path "/${rsm.getCollectionStateName()}()"
	POST -> ${rsm.getCollectionStateName()}_pseudo_created
	GET *-> ${rsm.getEntityStateName()} id=${rsm.getMappedEntityProperty()}
#foreach ( $transition in $rsm.getTransitions() )
#if ($transition.isCollectionState()) 
	GET *-> ${transition.getTargetResourceStateMachine().getCollectionStateName()}Filtered filter="${transition.getFilter()}"
#elseif(!$transition.isUniqueTransition())
	GET *-> ${rsm.getEntityStateName()}_${transition.getTargetStateName()} id=${rsm.getMappedEntityProperty()}, nav${transition.getTargetStateName()}="${transition.getTargetStateName()}"
#else
	GET *-> ${transition.getTargetResourceStateMachine().getEntityStateName()} id=${transition.getLinkProperty()}
#end
#end
end
#* Filtered collection resource state*#
#if(${rsm.isCollectionStateWithIncomingTransitions()})
resource ${rsm.getCollectionStateName()}Filtered
	collection ${rsm.getEntityName()}
	view { GETEntitiesFiltered }
	path "/${rsm.getCollectionStateName()}Filtered({filter})"
	GET *-> ${rsm.getEntityStateName()} id=${rsm.getMappedEntityProperty()}
#foreach ( $transition in $rsm.getTransitions() )
#if ($transition.isCollectionState()) 
	GET *-> ${transition.getTargetResourceStateMachine().getCollectionStateName()}Filtered filter="${transition.getFilter()}"
#elseif(!$transition.isUniqueTransition())
	GET *-> ${rsm.getEntityStateName()}_${transition.getTargetStateName()} id=${rsm.getMappedEntityProperty()}, nav${transition.getTargetStateName()}="${transition.getTargetStateName()}"
#else
	GET *-> ${transition.getTargetResourceStateMachine().getEntityStateName()} id=${transition.getLinkProperty()}
#end
#end
end
#end
#* Entity created resource state*#
resource ${rsm.getCollectionStateName()}_pseudo_created
	collection ${rsm.getEntityName()}
	view { GETEntity }
	actions { CreateEntity }
	path "/${rsm.getCollectionStateName()}()"
end

#* Entity resource state*#
resource ${rsm.getEntityStateName()}
	item ${rsm.getEntityName()}
	view { GETEntity }
	path "/${rsm.getCollectionStateName()}(${rsm.getPathParametersTemplate()})"
#foreach ( $transition in $rsm.getTransitions() )
#if ($transition.isCollectionState()) 
	GET -> ${transition.getTargetResourceStateMachine().getCollectionStateName()}Filtered filter="${transition.getFilter()}"
#elseif(!$transition.isUniqueTransition())
	GET -> ${rsm.getEntityStateName()}_${transition.getTargetStateName()} id=${rsm.getMappedEntityProperty()}, nav${transition.getTargetStateName()}="${transition.getTargetStateName()}"
#else
	GET -> ${transition.getTargetResourceStateMachine().getEntityStateName()} id=${transition.getLinkProperty()}
#end
#end
end

#* Transition to other resource states *#
#foreach ( $transition in $rsm.getTransitions() )
#if(!$transition.isUniqueTransition() && !$transition.isCollectionState())#*
	Transition to entity resource state in target RSM *#
resource ${rsm.getEntityStateName()}_${transition.getTargetStateName()}
	item ${transition.getTargetEntityName()}
	view { GETNavProperty${transition.getTargetStateName()} }
	path "/${rsm.getCollectionStateName()}(${rsm.getPathParametersTemplate()})/{nav${transition.getTargetStateName()}}"
	GET -> ${transition.getTargetResourceStateMachine().getEntityStateName()} id=${transition.getTargetResourceStateMachine().getMappedEntityProperty()}
end
#end
#end
#end