package ${behaviourNamespace};

import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Properties;
import java.util.Set;

import com.temenos.interaction.commands.odata.ODataUriSpecification;
import com.temenos.interaction.core.hypermedia.Action;
import com.temenos.interaction.core.hypermedia.CollectionResourceState;
import com.temenos.interaction.core.hypermedia.ResourceState;
import com.temenos.interaction.core.hypermedia.ResourceStateMachine;

public class Behaviour {

	public ResourceState getSimpleODataInteractionModel() {
		// Service root
		ResourceState initialState = new ResourceState("ServiceDocument", "begin", createActionSet(new Action("GETServiceDocument", Action.TYPE.VIEW), null), "/");

		//Resource state machines
#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
		ResourceStateMachine ${rsm.getCollectionStateName()} = get${rsm.getEntityName()}SM();
#end

#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
		initialState.addTransition("GET", ${rsm.getCollectionStateName()});
#end
		addTransitionsBetweenRSMs(##
#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
#if ( $velocityCount > 1 )
, ##
#end
${rsm.getCollectionStateName()}##
#end
);
		
		return initialState;
	}
	
	public void addTransitionsBetweenRSMs(##
#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
#if ( $velocityCount > 1 )
, ##
#end
ResourceStateMachine ${rsm.getCollectionStateName()}##
#end
) {
		Map<String, String> uriLinkageMap = new HashMap<String, String>();

#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
#foreach ( $transition in $rsm.getTransitions() )
		uriLinkageMap.put("id", "${transition.getTargetResourceStateMachine().getMappedEntityProperty()}");
#if ($transition.isCollectionState()) 
		((CollectionResourceState) ${rsm.getCollectionStateName()}.getResourceStateByName("${transition.getTargetStateName()}")).addTransitionForEachItem("GET", ${transition.getTargetResourceStateMachine().getCollectionStateName()}.getResourceStateByName("${transition.getTargetResourceStateMachine().getCollectionStateName()}"), uriLinkageMap);
#else
		${rsm.getCollectionStateName()}.getResourceStateByName("${transition.getTargetStateName()}").addTransition("GET", ${transition.getTargetResourceStateMachine().getCollectionStateName()}.getResourceStateByName("${transition.getReciprocalLinkState()}"), uriLinkageMap);
#end
#end

#end
	}
	
#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
	public ResourceStateMachine get${rsm.getEntityName()}SM() {
		CollectionResourceState ${rsm.getCollectionStateName()} = new CollectionResourceState("${rsm.getEntityName()}", "${rsm.getCollectionStateName()}", createActionSet(new Action("GETEntities", Action.TYPE.VIEW), null), "/${rsm.getEntityName()}");
		ResourceState pseudo = new ResourceState(${rsm.getCollectionStateName()}, "${rsm.getEntityName()}_pseudo_created", createActionSet(null, new Action("CreateEntity", Action.TYPE.ENTRY)));
		ResourceState ${rsm.getEntityStateName()} = new ResourceState("${rsm.getEntityName()}", "${rsm.getEntityStateName()}", createActionSet(new Action("GETEntity", Action.TYPE.VIEW), null), "/${rsm.getEntityName()}({id})");
#foreach ( $transition in $rsm.getTransitions() )
#if ($transition.isCollectionState()) 
        Properties navPropertiesC${transition.getTargetStateName()} = new Properties();
        navPropertiesC${transition.getTargetStateName()}.put("entity", "${rsm.getEntityName()}");
		CollectionResourceState ${transition.getTargetStateName()} = new CollectionResourceState("${transition.getTargetEntityName()}", "${transition.getTargetStateName()}", createActionSet(new Action("GETNavProperty", Action.TYPE.VIEW, navPropertiesC${transition.getTargetStateName()}), null), "/${rsm.getEntityName()}({id})/${transition.getTargetStateName()}", new ODataUriSpecification().getTemplate("/${rsm.getEntityName()}", ODataUriSpecification.NAVPROPERTY_URI_TYPE));
#else
        Properties navPropertiesI${transition.getTargetStateName()} = new Properties();
        navPropertiesI${transition.getTargetStateName()}.put("entity", "${rsm.getEntityName()}");
		ResourceState ${transition.getTargetStateName()} = new ResourceState("${transition.getTargetEntityName()}", "${transition.getTargetStateName()}", createActionSet(new Action("GETNavProperty", Action.TYPE.VIEW, navPropertiesI${transition.getTargetStateName()}), null), "/${rsm.getEntityName()}({id})/${transition.getTargetStateName()}", new ODataUriSpecification().getTemplate("/${rsm.getEntityName()}", ODataUriSpecification.NAVPROPERTY_URI_TYPE));
#end
#end
		
		//Add state transitions
		Map<String, String> uriLinkageMap = new HashMap<String, String>();
		uriLinkageMap.put("id", "${rsm.getMappedEntityProperty()}");
		${rsm.getCollectionStateName()}.addTransitionForEachItem("GET", ${rsm.getEntityStateName()}, uriLinkageMap);
		${rsm.getCollectionStateName()}.addTransition("POST", pseudo);
#foreach ( $transition in $rsm.getTransitions() )
		${rsm.getEntityStateName()}.addTransition("GET", ${transition.getTargetStateName()}, uriLinkageMap);
#end

		return new ResourceStateMachine(${rsm.getCollectionStateName()});
	}

#end

    private Set<Action> createActionSet(Action view, Action entry) {
        Set<Action> actions = new HashSet<Action>();
        if (view != null)
            actions.add(view);
        if (entry != null)
            actions.add(entry);
        return actions;
    }

}