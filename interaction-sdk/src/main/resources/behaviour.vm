package $behaviourNamespace;

import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import java.util.HashMap;
import java.util.Map;

import com.temenos.interaction.core.hypermedia.CollectionResourceState;
import com.temenos.interaction.core.hypermedia.ResourceState;
import com.temenos.interaction.core.hypermedia.ResourceStateMachine;

public class Behaviour {

	public ResourceState getSimpleODataInteractionModel() {
		//Service root and metadata resource states
		ResourceState initialState = new ResourceState("ServiceDocument", "begin", "/");
		ResourceState metadata = new ResourceState("", "metadata", "/$metadata");

		//Resource state machines
#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
		ResourceStateMachine ${rsm.getCollectionStateName()} = get${rsm.getEntityName()}SM();
#end

		//Add transitions between RSMs
		initialState.addTransition("GET", metadata);
#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
		initialState.addTransition("GET", ${rsm.getCollectionStateName()});
#end
		addTransitionsBetweenRSMs(##
#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
#if ( $velocityCount > 1 )
, ##
#end
${rsm.getCollectionStateName()}##
#end
);
		
		return initialState;
	}
	
	public void addTransitionsBetweenRSMs(##
#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
#if ( $velocityCount > 1 )
, ##
#end
ResourceStateMachine ${rsm.getCollectionStateName()}##
#end
) {
		Map<String, String> uriLinkageMap = new HashMap<String, String>();

#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
#foreach ( $transition in $rsm.getTransitions() )
		uriLinkageMap.put("id", "${transition.getTargetResourceStateMachine().getMappedEntityProperty()}");
#if ($transition.isCollectionState()) 
		((CollectionResourceState) ${rsm.getCollectionStateName()}.getState("/${rsm.getEntityName()}({id})/${transition.getTargetStateName()}")).addTransitionForEachItem("GET", ${transition.getTargetResourceStateMachine().getCollectionStateName()}.getState("/${transition.getTargetEntityName()}({id})"), uriLinkageMap);
#else
		${rsm.getCollectionStateName()}.getState("/${rsm.getEntityName()}({id})/${transition.getTargetStateName()}").addTransition("GET", ${transition.getTargetResourceStateMachine().getCollectionStateName()}.getState("/${transition.getTargetEntityName()}({id})/${rsm.getCollectionStateName()}"), uriLinkageMap);
#end
#end

#end
	}
	
#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
	public ResourceStateMachine get${rsm.getEntityName()}SM() {
		CollectionResourceState ${rsm.getCollectionStateName()} = new CollectionResourceState("${rsm.getEntityName()}", "${rsm.getCollectionStateName()}", "/${rsm.getEntityName()}");
		ResourceState ${rsm.getEntityStateName()} = new ResourceState("${rsm.getEntityName()}", "${rsm.getEntityStateName()}", "/${rsm.getEntityName()}({id})");
#foreach ( $transition in $rsm.getTransitions() )
#if ($transition.isCollectionState()) 
		CollectionResourceState ${transition.getTargetStateName()} = new CollectionResourceState("${transition.getTargetEntityName()}", "${transition.getTargetStateName()}", "/${transition.getTargetEntityName()}()/${transition.getTargetStateName()}");
#else
		ResourceState ${transition.getTargetStateName()} = new ResourceState("${transition.getTargetEntityName()}", "${transition.getTargetStateName()}", "/${transition.getTargetEntityName()}({id})/${transition.getTargetStateName()}");
#end
#end
		
		//Add state transitions
		Map<String, String> uriLinkageMap = new HashMap<String, String>();
		uriLinkageMap.put("id", "${rsm.getMappedEntityProperty()}");
		${rsm.getCollectionStateName()}.addTransitionForEachItem("GET", ${rsm.getEntityStateName()}, uriLinkageMap);
#foreach ( $transition in $rsm.getTransitions() )
		${rsm.getEntityStateName()}.addTransition("GET", ${transition.getTargetStateName()}, uriLinkageMap);
#end

		return new ResourceStateMachine(${rsm.getCollectionStateName()});
	}

#end
}