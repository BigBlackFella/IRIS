<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- Initialise JPA for MockResponder -->
	<bean id="entityManagerFactory"	class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="ResponderServiceHibernate" />		
	</bean>
	
	<!-- Initialise responder database -->
	<bean factory-method="fillDatabase" class="com.temenos.interaction.sdk.util.ResponderDBUtils" />

	<!-- Metadata -->	
	<bean id="metadataManager" class="com.temenos.interaction.core.resource.ResourceMetadataManager" />
	<bean id="edmDataServices" factory-bean="metadataManager" factory-method="getMetadata"/>
	
	<!-- Producers -->
	<bean id="mockProducer" class="org.odata4j.producer.jpa.JPAProducer">
		<constructor-arg name="emf" ref="entityManagerFactory" />
		<constructor-arg name="namespace" value="$entityContainerNamespace" />		
		<constructor-arg name="maxResults" value="100" />				
	</bean>
	<!-- <bean id="myProducer" class="com.interaction.producer.example.MyProducer"/> -->
	
	<!-- An extension of org.apache.wink.spring.Registrar with support for singletons -->
	<bean class="com.temenos.interaction.winkext.RegistrarWithSingletons">
		<property name="singletons">
			<set>
				<ref local="atomProvider" />
				<ref local="edmxProvider" />
				<ref local="serviceDocumentProvider" />
 			</set>
   		</property>
		<property name="serviceRoot" ref="ServiceRoot" />
	</bean>

	<bean id="atomProvider" class="com.temenos.interaction.core.media.atom.AtomXMLProvider">
		<constructor-arg name="edmDataServices" ref="edmDataServices" />
		<constructor-arg name="resourceRegistry" ref="resourceRegistry" />
		<constructor-arg><bean class="com.temenos.interaction.core.hypermedia.EntityTransformer" /></constructor-arg>
	</bean>
	<bean id="edmxProvider" class="com.temenos.interaction.core.media.edmx.EdmxMetaDataProvider" >
		<constructor-arg name="resourceRegistry" ref="resourceRegistry" />
	</bean>
	<bean id="serviceDocumentProvider" class="com.temenos.interaction.core.media.atomsvc.ServiceDocumentProvider" />

	<bean id="resourceRegistry" class="com.temenos.interaction.core.hypermedia.ResourceRegistry">
		<constructor-arg name="edmDataServices" ref="edmDataServices" />
		<constructor-arg name="root" ref="ServiceRoot" />
	</bean>

	<!-- Behaviour -->
	<bean id="behaviour" class="$behaviourClass" />
	<bean id="interaction" factory-bean="behaviour" factory-method="getSimpleODataInteractionModel" />
	<bean id="stateMachine" class="com.temenos.interaction.core.hypermedia.ResourceStateMachine">
		<constructor-arg ref="interaction" />
		<constructor-arg><bean class="com.temenos.interaction.core.hypermedia.EntityTransformer" /></constructor-arg>
	</bean>

	<!-- Resources -->
	<bean id="ServiceRoot" class="com.temenos.interaction.core.rim.HTTPHypermediaRIM">
		<constructor-arg ref="commands" />
		<constructor-arg ref="stateMachine" />
	</bean>

	<!-- Commands -->
	<bean id="commands" class="com.temenos.interaction.core.command.NewCommandController">
		<constructor-arg name="commands">
			<map>
				<entry>
					<key><value>GET+/</value></key>
					<bean class="com.temenos.interaction.commands.odata.GETMetadataCommand">
						<constructor-arg name="entity" value="ServiceDocument" />
						<constructor-arg name="edmDataServices" ref="edmDataServices" />
					</bean>
				</entry>
				<entry>
					<key><value>GET+/$metadata</value></key>
					<bean class="com.temenos.interaction.commands.odata.GETMetadataCommand">
						<constructor-arg name="entity" value="Metadata" />
						<constructor-arg name="edmDataServices" ref="edmDataServices" />
					</bean>
				</entry>
#foreach ( $resourceInfo in $resourcesInfo )
				<entry>
					<key><value>$resourceInfo.getResourcePath()</value></key>
					<bean class="$resourceInfo.getCommandType()">
						<constructor-arg name="entity" value="$resourceInfo.getEntityInfo().getClazz()" />
#if ($resourceInfo.getEntityInfo().isJpaEntity()) 
						<constructor-arg name="producer" ref="mockProducer" />
#else
						<constructor-arg name="producer" ref="myProducer" />
#end
					</bean>
				</entry>
#end
#foreach ( $rsm in $interactionModel.getResourceStateMachines() )
#foreach ( $transition in $rsm.getTransitions() )
				<entry>
					<key><value>GET+/${rsm.getEntityName()}({id})/${transition.getTargetStateName()}</value></key>
#if ($transition.isCollectionState()) 
					<bean class="com.temenos.interaction.commands.odata.GETEntitiesCommand">
						<constructor-arg name="entity" value="$transition.getTargetEntityName()" />
						<constructor-arg name="producer" ref="mockProducer" />
					</bean>
#else
					<bean class="com.temenos.interaction.commands.odata.GETLinkEntityCommand">
						<constructor-arg name="entity" value="$rsm.getEntityName()" />
						<constructor-arg name="linkProperty" value="$transition.getLinkProperty()" />
						<constructor-arg name="linkEntity" value="$transition.getTargetEntityName()" />
						<constructor-arg name="producer" ref="mockProducer" />
					</bean>
#end
				</entry>
#end
#end
			</map>
		</constructor-arg>
	</bean>
</beans>
